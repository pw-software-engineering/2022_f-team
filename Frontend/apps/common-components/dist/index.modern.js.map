{"version":3,"file":"index.modern.js","sources":["../src/FormInputComponents.tsx","../src/utilities.tsx","../src/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\ninterface FormInputComponentProps {\r\n  label: string\r\n  optional?: true\r\n  type: string\r\n  validationText: string\r\n  validationFunc: (x: string) => boolean\r\n  onValueChange: (x: string) => void\r\n}\r\n\r\nconst FormInputComponent = (props: FormInputComponentProps) => {\r\n  const [isValid, setIsValid] = useState<boolean>(true)\r\n\r\n  const handleValueChange = (insertedValue: string) => {\r\n    setIsValid(props.validationFunc(insertedValue));\r\n    props.onValueChange(insertedValue)\r\n  }\r\n\r\n  return (\r\n    <div className='formInputWrapper'>\r\n      <label>\r\n        {props.label}:{' '}\r\n        {props.optional === undefined && <p className='requiredInput'>*</p>}\r\n      </label>\r\n      <input \r\n        type={props.type}\r\n        onChange={(e) => handleValueChange(e.target.value)}\r\n      />\r\n      {!isValid && <p className='validationMessage'>{props.validationText}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormInputComponent;","export const EmailValidator = (value: string) => {\r\n  const regex =\r\n    /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n  return value.length > 0 && regex.test(value)\r\n}\r\nexport const PhoneValidator = (value: string) => {\r\n  const regex = /^\\+?[0-9]{9,12}$/i\r\n  return (\r\n    value.replaceAll(' ', '').length > 6 &&\r\n    regex.test(value.replaceAll(' ', ''))\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport styles from './styles.module.css'\r\n\r\ninterface Props {\r\n  text: string\r\n}\r\n\r\nexport const ExampleComponent = ({ text }: Props) => {\r\n  return <div className={styles.test}>Example Component: {text}</div>\r\n}\r\n\r\nexport { default as FormInputComponent } from './FormInputComponents'\r\nexport { EmailValidator, PhoneValidator } from './utilities'"],"names":["FormInputComponent","props","isValid","setIsValid","useState","handleValueChange","insertedValue","validationFunc","onValueChange","React","className","label","optional","undefined","type","onChange","e","target","value","validationText","EmailValidator","regex","length","test","PhoneValidator","replaceAll","ExampleComponent","text","styles"],"mappings":";;;;AAWA,MAAMA,kBAAkB,GAAIC,KAAD;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAU,IAAV,CAAtC;;AAEA,QAAMC,iBAAiB,GAAIC,aAAD;AACxBH,IAAAA,UAAU,CAACF,KAAK,CAACM,cAAN,CAAqBD,aAArB,CAAD,CAAV;AACAL,IAAAA,KAAK,CAACO,aAAN,CAAoBF,aAApB;AACD,GAHD;;AAKA,SACEG,4BAAA,MAAA;AAAKC,IAAAA,SAAS,EAAC;GAAf,EACED,4BAAA,QAAA,MAAA,EACGR,KAAK,CAACU,KADT,KAAA,EACiB,GADjB,EAEGV,KAAK,CAACW,QAAN,KAAmBC,SAAnB,IAAgCJ,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,KAAA,CAFnC,CADF,EAKED,4BAAA,QAAA;AACEK,IAAAA,IAAI,EAAEb,KAAK,CAACa;AACZC,IAAAA,QAAQ,EAAGC,CAAD,IAAOX,iBAAiB,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;GAFpC,CALF,EASG,CAAChB,OAAD,IAAYO,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,EAAkCT,KAAK,CAACkB,cAAxC,CATf,CADF;AAaD,CArBD;;MCXaC,cAAc,GAAIF,KAAD;AAC5B,QAAMG,KAAK,GACT,sHADF;AAEA,SAAOH,KAAK,CAACI,MAAN,GAAe,CAAf,IAAoBD,KAAK,CAACE,IAAN,CAAWL,KAAX,CAA3B;AACD,CAJM;AAKP,MAAaM,cAAc,GAAIN,KAAD;AAC5B,QAAMG,KAAK,GAAG,mBAAd;AACA,SACEH,KAAK,CAACO,UAAN,CAAiB,GAAjB,EAAsB,EAAtB,EAA0BH,MAA1B,GAAmC,CAAnC,IACAD,KAAK,CAACE,IAAN,CAAWL,KAAK,CAACO,UAAN,CAAiB,GAAjB,EAAsB,EAAtB,CAAX,CAFF;AAID,CANM;;MCEMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD;AAC9B,SAAOlB,aAAA,MAAA;AAAKC,IAAAA,SAAS,EAAEkB,MAAM,CAACL;GAAvB,uBAAA,EAAiDI,IAAjD,CAAP;AACD,CAFM;;;;"}